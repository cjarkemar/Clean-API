// <auto-generated />
using System;
using Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(RealDatabase))]
    partial class RealDatabaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Domain.Models.Animal.Bird", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("CanFly")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Birds");

                    b.HasData(
                        new
                        {
                            Id = new Guid("42ef359d-8e78-4eb1-9d25-5a0adea10297"),
                            CanFly = true,
                            Color = "Green&Yellow",
                            Name = "TobiasNugget"
                        },
                        new
                        {
                            Id = new Guid("109f2fe5-49b0-490b-92fd-b9140cd87bf0"),
                            CanFly = false,
                            Color = "Yellow",
                            Name = "Allanballan"
                        },
                        new
                        {
                            Id = new Guid("e444b761-8b7c-4794-8fe8-fb6d71a44594"),
                            CanFly = false,
                            Color = "Black",
                            Name = "Kalle"
                        },
                        new
                        {
                            Id = new Guid("2ea8167e-6cdf-44e8-b8dc-c5bc83c48c7d"),
                            CanFly = true,
                            Color = "Purple",
                            Name = "Cherry"
                        });
                });

            modelBuilder.Entity("Domain.Models.Cat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("LikesToPlay")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cats");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2fdfb4bb-bb20-4c00-962a-4f86fd6fc74c"),
                            Breed = "Bergskatt",
                            LikesToPlay = true,
                            Name = "Garfield",
                            Weight = 3
                        },
                        new
                        {
                            Id = new Guid("0b31f9b6-fbfa-4568-a3c3-13f3ae988984"),
                            Breed = "Bergskatt",
                            LikesToPlay = false,
                            Name = "HorseCatDude",
                            Weight = 3
                        });
                });

            modelBuilder.Entity("Domain.Models.Dog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Barks")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Dogs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("97dd46b6-fe8d-4c6a-ba50-15d23dba3e98"),
                            Barks = true,
                            Breed = "Golden Retriever",
                            Name = "OldG",
                            Weight = 30
                        },
                        new
                        {
                            Id = new Guid("1589368d-89d1-4946-824f-586556539a46"),
                            Barks = false,
                            Breed = "Labrador",
                            Name = "NewG",
                            Weight = 15
                        },
                        new
                        {
                            Id = new Guid("825e70b9-3966-43e2-9b7b-a43b2f461914"),
                            Barks = true,
                            Breed = "Daschund",
                            Name = "Björn",
                            Weight = 4
                        },
                        new
                        {
                            Id = new Guid("0a9eca50-950f-4f6b-8f7d-b8c650050076"),
                            Barks = true,
                            Breed = "chihuahua",
                            Name = "Patrik",
                            Weight = 4
                        },
                        new
                        {
                            Id = new Guid("f40bf4a9-3165-431d-8f51-be0290a081d3"),
                            Barks = true,
                            Breed = "chihuahua",
                            Name = "Alfred",
                            Weight = 4
                        });
                });

            modelBuilder.Entity("Domain.Models.User.BirdOwner", b =>
                {
                    b.Property<Guid>("BirdId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("BirdId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("BirdOwner");
                });

            modelBuilder.Entity("Domain.Models.User.CatOwner", b =>
                {
                    b.Property<Guid>("CatId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("CatId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("CatOwner");
                });

            modelBuilder.Entity("Domain.Models.User.DogOwner", b =>
                {
                    b.Property<Guid>("DogId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("DogId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("DogOwner");
                });

            modelBuilder.Entity("Domain.Models.User.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Domain.Models.User.BirdOwner", b =>
                {
                    b.HasOne("Domain.Models.Animal.Bird", "Bird")
                        .WithMany("BirdOwner")
                        .HasForeignKey("BirdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.User.User", "User")
                        .WithMany("BirdOwner")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bird");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.User.CatOwner", b =>
                {
                    b.HasOne("Domain.Models.Cat", "Cat")
                        .WithMany("CatOwner")
                        .HasForeignKey("CatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.User.User", "User")
                        .WithMany("CatOwner")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cat");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.User.DogOwner", b =>
                {
                    b.HasOne("Domain.Models.Dog", "Dog")
                        .WithMany("DogOwner")
                        .HasForeignKey("DogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.User.User", "User")
                        .WithMany("DogOwner")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dog");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.Animal.Bird", b =>
                {
                    b.Navigation("BirdOwner");
                });

            modelBuilder.Entity("Domain.Models.Cat", b =>
                {
                    b.Navigation("CatOwner");
                });

            modelBuilder.Entity("Domain.Models.Dog", b =>
                {
                    b.Navigation("DogOwner");
                });

            modelBuilder.Entity("Domain.Models.User.User", b =>
                {
                    b.Navigation("BirdOwner");

                    b.Navigation("CatOwner");

                    b.Navigation("DogOwner");
                });
#pragma warning restore 612, 618
        }
    }
}
